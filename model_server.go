/*
 * JupyterHub
 *
 * The REST API for JupyterHub
 *
 * API version: 4.0.0b2
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package client

import (
	"time"
)

type Server struct {
	// The server's name. The user's default server has an empty name ('')
	Name string `json:"name,omitempty"`
	// Whether the server is ready for traffic. Will always be false when any transition is pending.
	Ready bool `json:"ready,omitempty"`
	// Whether the server is stopped. Added in JupyterHub 3.0, and only useful when using the `?include_stopped_servers` request parameter. Now that stopped servers may be included (since JupyterHub 3.0), this is the simplest way to select stopped servers. Always equivalent to `not (ready or pending)`.
	Stopped bool `json:"stopped,omitempty"`
	// The currently pending action, if any. A server is not ready if an action is pending.
	Pending string `json:"pending,omitempty"`
	// The URL where the server can be accessed (typically /user/:name/:server.name/).
	Url string `json:"url,omitempty"`
	// The URL for an event-stream to retrieve events during a spawn.
	ProgressUrl string `json:"progress_url,omitempty"`
	// UTC timestamp when the server was last started.
	Started time.Time `json:"started,omitempty"`
	// UTC timestamp last-seen activity on this server.
	LastActivity time.Time `json:"last_activity,omitempty"`
	// Arbitrary internal state from this server's spawner. Only available on the hub's users list or get-user-by-name method, and only with admin:users:server_state scope. None otherwise.
	State *interface{} `json:"state,omitempty"`
	// User specified options for the user's spawned instance of a single-user server.
	UserOptions *interface{} `json:"user_options,omitempty"`
}
